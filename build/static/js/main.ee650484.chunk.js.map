{"version":3,"sources":["Watch/index.js","Watch/Watch.js","TodoList/index.js","TodoList/Todolist.js","TodoItem/index.js","TodoItem/TodoItem.js","App/App.js","App/index.js","index.js"],"names":["Watch","props","state","date","Date","this","timerid","setInterval","tick","clearInterval","setState","className","toLocaleDateString","toLocaleTimeString","Component","TodoList","onSubmit","addItem","TextField","id","ref","inputElement","value","currentItem","text","onChange","handleInput","Button","type","color","TodoItem","createTasks","item","key","inner_key","onClick","deleteItem","variant","ListItem","entries","map","get_data","info","i","localStorage","length","isNaN","data","getItem","push","JSON","parse","console","log","App","e","target","now","preventDefault","newItem","stringify","items","setItem","removeItem","filterItems","filter","ReactDOM","render","document","getElementById"],"mappings":"oQACeA,G,wDCGX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAACC,KAAM,IAAIC,MAFV,E,gEAKE,IAAD,OAEfC,KAAKC,QAAUC,aAAY,kBAAM,EAAKC,SAAQ,O,6CAI9CC,cAAcJ,KAAKC,W,6BAGnBD,KAAKK,SAAS,CACVP,KAAM,IAAIC,S,+BAId,OACI,yBAAKO,UAAU,SACX,4BAAQA,UAAU,iBAAlB,gDAA6CN,KAAKH,MAAMC,KAAKS,sBAC7D,wBAAID,UAAU,aAAd,gFAA4CN,KAAKH,MAAMC,KAAKU,2B,GAvBxDC,c,gBCALC,E,uKCGP,OACI,0BAAMC,SAAUX,KAAKJ,MAAMgB,SAC3B,kBAACC,EAAA,EAAD,CAAWC,GAAG,iBACdC,IAAMf,KAAKJ,MAAMoB,aACjBC,MAAQjB,KAAKJ,MAAMsB,YAAYC,KAC/BC,SAAYpB,KAAKJ,MAAMyB,cACvB,kBAACC,EAAA,EAAD,CAASC,KAAK,SAASC,MAAM,WAA7B,mF,GARWf,aCFRgB,E,4MCEXC,YAAc,SAAAC,GACT,OAAQ,yBAAKC,IAAMD,EAAKE,WACrB,kBAACP,EAAA,EAAD,KACCK,EAAKR,MAEN,kBAACG,EAAA,EAAD,CAAQQ,QAAS,kBACb,EAAKlC,MAAMmC,WAAWJ,EAAKE,YAC3BG,QAAQ,YAAYR,MAAM,aAF9B,W,uDAOD,IACMS,EADSjC,KAAKJ,MAAMsC,QACFC,IAAInC,KAAK0B,aACjC,OAAO,iCAAOO,O,GAfFxB,a,MCMvB,SAAS2B,IAEL,IADA,IAAIC,EAAO,GACHC,EAAI,EAAGA,EAAIC,aAAaC,OAAOF,IAAI,CACvC,IAAIV,EAAMW,aAAaX,IAAIU,GAC3B,IAAGG,MAAMb,GAAT,CAGI,IAAIc,EAAOH,aAAaI,QAAQf,GAChCS,EAAKO,KAAKC,KAAKC,MAAMJ,KAG7B,OAAOL,EAEXU,QAAQC,IAAIZ,K,ICnBGa,E,kDDwBf,aAAc,IAAD,8BAET,gBAOJ5B,YAAc,SAAA6B,GACV,IACMhC,EAAc,CAACC,KADJ+B,EAAEC,OAAOlC,MACWY,UAAW9B,KAAKqD,OACrD,EAAK/C,SAAS,CACVa,iBAbK,EAiBbN,QAAU,SAAAsC,GACNA,EAAEG,iBACF,IAAMC,EAAU,EAAKzD,MAAMqB,YACvBwB,EAAOG,KAAKU,UAAUD,GAE1B,GADAP,QAAQC,IAAIM,GACS,KAAjBA,EAAQnC,KAAY,CACpB,IAAIqC,EAAK,sBAAO,EAAK3D,MAAM2D,OAAlB,CAAyBF,IAClCf,aAAakB,QAAQH,EAAQzB,UAAWa,GAExC,EAAKrC,SAAS,CACVmD,MAAMA,EACNtC,YAAa,CAACC,KAAM,GAAIU,UAAU,QA5BjC,EAgCbE,WAAa,SAAAF,GACTU,aAAamB,WAAW7B,GACxB,IAAM8B,EAAc,EAAK9D,MAAM2D,MAAMI,QAAO,SAAAjC,GACxC,OAAOA,EAAKE,YAAcA,KAE9B,EAAKxB,SAAS,CACVmD,MAAOG,KAnCX,EAAK9D,MAAQ,CAET2D,MAAOpB,IACPlB,YAAa,CAACC,KAAM,gEAAeU,UAAW,cANzC,E,qDA6CL,OACI,yBAAKvB,UAAU,QACf,kBAAC,EAAD,MACA,kBAAC,EAAD,CACAM,QAAWZ,KAAKY,QAChBI,aAAgBhB,KAAKgB,aACrBK,YAAerB,KAAKqB,YACpBH,YAAelB,KAAKH,MAAMqB,cAE1B,kBAAC,EAAD,CAAUgB,QAAWlC,KAAKH,MAAM2D,MAAOzB,WAAc/B,KAAK+B,kB,GAvDpDtB,aEtBlBoD,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.ee650484.chunk.js","sourcesContent":["import Watch from \"./Watch\";\nexport default Watch;\n\n","import React, {Component} from 'react';\nimport './Watch.css';\n\nclass Watch extends Component{\n    constructor(props){\n        super(props); //вызывает конструктор родителя Component c данными свойствами\n        this.state = {date: new Date()} // создаем у нас состояние\n    }\n\n    componentDidMount(){\n        //в этой части жизненного цикла он будет создаваться\n        this.timerid = setInterval(() => this.tick(), 1000)\n        // у нас есть свойство, которое получает значение из анонимной функции\n    }\n    componentWillUnmount(){\n        clearInterval(this.timerid)\n    }\n    tick(){\n        this.setState({\n            date: new Date()\n        });\n    }\n    render(){\n        return(\n            <div className='watch'>\n                <button className=\"watch__button\"> Сегодня: {this.state.date.toLocaleDateString()}</button>\n                <h3 className=\"watch__h3\">  Текущее время: {this.state.date.toLocaleTimeString()}</h3>\n            </div>\n        )\n    }\n    \n}\nexport default Watch;\n","import TodoList from \"./Todolist\";\n\n\nexport default TodoList;","import React, {Component} from 'react';\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\n\nclass TodoList extends Component{\n    render(){\n        return(\n            <form onSubmit={this.props.addItem}>\n            <TextField id=\"standard-basic\"  \n            ref= {this.props.inputElement}\n            value= {this.props.currentItem.text}\n            onChange = {this.props.handleInput} />\n            <Button  type=\"submit\" color=\"primary\"> Добавить дело</Button>\n            </form>\n        )\n    }\n}\nexport default TodoList;","import TodoItem from './TodoItem';\n\nexport default TodoItem;","import React, {Component} from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nclass TodoItem extends Component{\n    createTasks = item =>{\n         return (<div key= {item.inner_key}>\n            <Button>\n            {item.text}\n            </Button>\n            <Button onClick={()=>\n                this.props.deleteItem(item.inner_key)}\n                variant=\"contained\" color=\"secondary\"> Done</Button>\n            </div>)\n        }\n\n        render(){\n           const listEn = this.props.entries; // здесь мы получаем информацию\n           const ListItem = listEn.map(this.createTasks); // здесь мы ее оборачиваем в наш метод createTasks\n           return <div> {ListItem}</div> // возрвращаем обернутым в див \n        }\n}\n\nexport default TodoItem;","import React, {Component} from 'react'\nimport Watch from '../Watch'\nimport TodoList from \"../TodoList\";\nimport TodoItem from \"../TodoItem\";\nimport \"./App.css\"\n\n\n\n // императивный стиль, а нам нужен декларативный вариант\nfunction get_data(){\n    let info = []\n    for(let i = 0; i < localStorage.length;i++){\n        let key = localStorage.key(i);\n        if(isNaN(key)){\n            continue\n        } else{\n            let data = localStorage.getItem(key);\n            info.push(JSON.parse(data));\n        }\n    }\n    return info; \n}\nconsole.log(get_data())\n\n\n// localStorage.setItem(\"test\", \"test\");\nclass App extends Component{\nconstructor(){\n\n    super()\n    this.state = {\n        //здесь у нас должно быть асинхронное получение дел из localstorage\n        items: get_data(),\n        currentItem: {text: \"первое дело\", inner_key: \"firstItem\"}\n    }\n}\nhandleInput = e =>{\n    const itemText = e.target.value;\n    const currentItem = {text: itemText, inner_key: Date.now()}\n    this.setState({\n        currentItem,\n    })\n}\n\naddItem = e => {\n    e.preventDefault();\n    const newItem = this.state.currentItem;\n    let data = JSON.stringify(newItem); // здесь мы переводим это в JSON\n    console.log(newItem)\n    if (newItem.text !== ''){\n        let items = [...this.state.items, newItem];\n        localStorage.setItem(newItem.inner_key, data); //здесь мы сохраняем это в localstorage\n        //можно попробовать все это заменить на push с тем же успехом\n        this.setState({\n            items:items,\n            currentItem: {text: \"\", inner_key:\"\"}\n        })\n    }\n}\ndeleteItem = inner_key =>{\n    localStorage.removeItem(inner_key);\n    const filterItems = this.state.items.filter(item => {\n        return item.inner_key !== inner_key;\n    })\n    this.setState({\n        items: filterItems\n    })\n}\n\n\n\n    render() {\n        return (\n            <div className=\"main\">\n            <Watch />\n            <TodoList \n            addItem = {this.addItem}\n            inputElement = {this.inputElement}\n            handleInput = {this.handleInput}\n            currentItem = {this.state.currentItem}\n            />\n            <TodoItem entries = {this.state.items} deleteItem = {this.deleteItem} />\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n","import App from \"./App\"\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}